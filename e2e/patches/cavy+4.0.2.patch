diff --git a/node_modules/cavy/src/Reporter.js b/node_modules/cavy/src/Reporter.js
index 1cdeb38..24ae1f7 100644
--- a/node_modules/cavy/src/Reporter.js
+++ b/node_modules/cavy/src/Reporter.js
@@ -9,7 +9,31 @@ export default class Reporter {
   // Internal: Creates a websocket connection to the cavy-cli server.
   onStart() {
     const url = 'ws://127.0.0.1:8082/';
+    console.debug('Creating websocket');
     this.ws = new WebSocket(url);
+    this.ws.onerror = console.error
+    this.ws.onopen = () => {
+      console.debug('Successfully opened websocket');
+    }
+    this.ws.onclose = () => {
+      console.debug('Closing websocket');
+    }
+
+    this.overrideConsole('log');
+    this.overrideConsole('debug');
+    this.overrideConsole('warn');
+  }
+
+  overrideConsole(fn) {
+    const original = console[fn];
+    console[fn] = (...args) => {
+      const timestamp = new Date().toISOString();
+      original(`[${timestamp}]`, ...args);
+      this.sendMessage({
+        "message": `${fn.toUpperCase()} ${new Date().toLocaleTimeString()} ${args.join(' ')}`,
+        "level": fn
+      });
+    }
   }
 
   // Internal: Send a single test result to cavy-cli over the websocket connection.
@@ -20,6 +44,13 @@ export default class Reporter {
     }
   }
 
+  sendMessage(data) {
+    if (this.websocketReady()) {
+      testData = { event: 'message', data };
+      this.sendData(testData);
+    }
+  }
+
   // Internal: Send report to cavy-cli over the websocket connection.
   onFinish(report) {
     if (this.websocketReady()) {
@@ -34,7 +65,6 @@ export default class Reporter {
       console.log(message);
     }
   }
-
   // Private: Determines whether data can be sent over the websocket.
   websocketReady() {
     // WebSocket.readyState 1 means the web socket connection is OPEN.
diff --git a/node_modules/cavy/src/TestRunner.js b/node_modules/cavy/src/TestRunner.js
index 40552bf..0af9639 100644
--- a/node_modules/cavy/src/TestRunner.js
+++ b/node_modules/cavy/src/TestRunner.js
@@ -148,7 +148,7 @@ export default class TestRunner {
       const stop = new Date();
       const time = (stop - start) / 1000;
       
-      let fullErrorMessage = `${description}  ❌\n   ${e.message}`;
+      let fullErrorMessage = `${description}  ❌\n   ${JSON.stringify(e)}`;
       console.warn(fullErrorMessage);
 
       this.results.push({
diff --git a/node_modules/cavy/src/Tester.js b/node_modules/cavy/src/Tester.js
index c61e31a..8d222ae 100644
--- a/node_modules/cavy/src/Tester.js
+++ b/node_modules/cavy/src/Tester.js
@@ -57,20 +57,8 @@ export default class Tester extends Component {
       key: Math.random()
     };
     this.testHookStore = props.store;
-    // Default to sending a test report to cavy-cli if no custom reporter is
-    // supplied.
-    if (props.reporter instanceof Function) {
-      const message = 'Deprecation warning: support for custom function' +
-                      'reporters will soon be deprecated. Cavy supports custom ' +
-                      'class based reporters. For more info, see the ' +
-                      'documentation here: ' +
-                      'https://cavy.app/docs/guides/writing-custom-reporters';
-      console.warn(message);
-      this.reporter = props.reporter;
-    } else {
-      reporterClass = props.reporter || Reporter;
-      this.reporter = new reporterClass;
-    }
+    reporterClass = props.reporter || Reporter;
+    this.reporter = new reporterClass;
   }
 
   componentDidMount() {
