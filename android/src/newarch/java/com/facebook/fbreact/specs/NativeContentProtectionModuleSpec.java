
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJavaSpec.js
 *
 * @nolint
 */

package com.facebook.fbreact.specs;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.turbomodule.core.interfaces.TurboModule;
import javax.annotation.Nonnull;

public abstract class NativeContentProtectionModuleSpec extends ReactContextBaseJavaModule implements TurboModule {
  public static final String NAME = "THEORCTContentProtectionModule";

  public NativeContentProtectionModuleSpec(ReactApplicationContext reactContext) {
    super(reactContext);
  }

  @Override
  public @Nonnull String getName() {
    return NAME;
  }

  @ReactMethod
  @DoNotStrip
  public abstract void registerContentProtectionIntegration(String integrationId, String keySystemId);

  @ReactMethod
  @DoNotStrip
  public abstract void onBuildProcessed(ReadableMap payload);

  @ReactMethod
  @DoNotStrip
  public abstract void onCertificateRequest(ReadableMap payload);

  @ReactMethod
  @DoNotStrip
  public abstract void onCertificateRequestProcessedAsCertificate(ReadableMap payload);

  @ReactMethod
  @DoNotStrip
  public abstract void onCertificateRequestProcessedAsRequest(ReadableMap payload);

  @ReactMethod
  @DoNotStrip
  public abstract void onCertificateResponseProcessed(ReadableMap payload);

  @ReactMethod
  @DoNotStrip
  public abstract void onLicenseRequestProcessedAsLicense(ReadableMap payload);

  @ReactMethod
  @DoNotStrip
  public abstract void onLicenseRequestProcessedAsRequest(ReadableMap payload);

  @ReactMethod
  @DoNotStrip
  public abstract void onLicenseResponseProcessed(ReadableMap payload);

  @ReactMethod
  @DoNotStrip
  public abstract void onExtractFairplayContentIdProcessed(ReadableMap payload);
}
