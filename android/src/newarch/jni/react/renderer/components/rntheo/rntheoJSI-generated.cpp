/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "rntheoJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_playing(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->playing(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_skip(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->skip(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_currentAdBreak(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->currentAdBreak(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_currentAds(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->currentAds(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_scheduledAdBreaks(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->scheduledAdBreaks(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_schedule(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->schedule(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_daiContentTimeForStreamTime(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->daiContentTimeForStreamTime(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber()
  );
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_daiStreamTimeForContentTime(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->daiStreamTimeForContentTime(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber()
  );
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_daiSnapback(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->daiSnapback(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_daiSetSnapback(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->daiSetSnapback(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asBool()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_addFriendlyObstruction(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->addFriendlyObstruction(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAdsModuleCxxSpecJSI_removeAllFriendlyObstructions(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAdsModuleCxxSpecJSI *>(&turboModule)->removeAllFriendlyObstructions(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}

NativeAdsModuleCxxSpecJSI::NativeAdsModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("THEORCTAdsModule", jsInvoker) {
  methodMap_["playing"] = MethodMetadata {1, __hostFunction_NativeAdsModuleCxxSpecJSI_playing};
  methodMap_["skip"] = MethodMetadata {1, __hostFunction_NativeAdsModuleCxxSpecJSI_skip};
  methodMap_["currentAdBreak"] = MethodMetadata {1, __hostFunction_NativeAdsModuleCxxSpecJSI_currentAdBreak};
  methodMap_["currentAds"] = MethodMetadata {1, __hostFunction_NativeAdsModuleCxxSpecJSI_currentAds};
  methodMap_["scheduledAdBreaks"] = MethodMetadata {1, __hostFunction_NativeAdsModuleCxxSpecJSI_scheduledAdBreaks};
  methodMap_["schedule"] = MethodMetadata {2, __hostFunction_NativeAdsModuleCxxSpecJSI_schedule};
  methodMap_["daiContentTimeForStreamTime"] = MethodMetadata {2, __hostFunction_NativeAdsModuleCxxSpecJSI_daiContentTimeForStreamTime};
  methodMap_["daiStreamTimeForContentTime"] = MethodMetadata {2, __hostFunction_NativeAdsModuleCxxSpecJSI_daiStreamTimeForContentTime};
  methodMap_["daiSnapback"] = MethodMetadata {1, __hostFunction_NativeAdsModuleCxxSpecJSI_daiSnapback};
  methodMap_["daiSetSnapback"] = MethodMetadata {2, __hostFunction_NativeAdsModuleCxxSpecJSI_daiSetSnapback};
  methodMap_["addFriendlyObstruction"] = MethodMetadata {2, __hostFunction_NativeAdsModuleCxxSpecJSI_addFriendlyObstruction};
  methodMap_["removeAllFriendlyObstructions"] = MethodMetadata {1, __hostFunction_NativeAdsModuleCxxSpecJSI_removeAllFriendlyObstructions};
}
static jsi::Value __hostFunction_NativeCacheModuleCxxSpecJSI_createTask(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCacheModuleCxxSpecJSI *>(&turboModule)->createTask(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCacheModuleCxxSpecJSI_getInitialState(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeCacheModuleCxxSpecJSI *>(&turboModule)->getInitialState(
    rt
  );
}
static jsi::Value __hostFunction_NativeCacheModuleCxxSpecJSI_renewLicense(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCacheModuleCxxSpecJSI *>(&turboModule)->renewLicense(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCacheModuleCxxSpecJSI_pauseCachingTask(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCacheModuleCxxSpecJSI *>(&turboModule)->pauseCachingTask(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCacheModuleCxxSpecJSI_removeCachingTask(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCacheModuleCxxSpecJSI *>(&turboModule)->removeCachingTask(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCacheModuleCxxSpecJSI_startCachingTask(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCacheModuleCxxSpecJSI *>(&turboModule)->startCachingTask(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}

NativeCacheModuleCxxSpecJSI::NativeCacheModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("THEORCTCacheModule", jsInvoker) {
  methodMap_["createTask"] = MethodMetadata {2, __hostFunction_NativeCacheModuleCxxSpecJSI_createTask};
  methodMap_["getInitialState"] = MethodMetadata {0, __hostFunction_NativeCacheModuleCxxSpecJSI_getInitialState};
  methodMap_["renewLicense"] = MethodMetadata {2, __hostFunction_NativeCacheModuleCxxSpecJSI_renewLicense};
  methodMap_["pauseCachingTask"] = MethodMetadata {1, __hostFunction_NativeCacheModuleCxxSpecJSI_pauseCachingTask};
  methodMap_["removeCachingTask"] = MethodMetadata {1, __hostFunction_NativeCacheModuleCxxSpecJSI_removeCachingTask};
  methodMap_["startCachingTask"] = MethodMetadata {1, __hostFunction_NativeCacheModuleCxxSpecJSI_startCachingTask};
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_casting(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->casting(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_chromecastCasting(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->chromecastCasting(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_airplayCasting(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->airplayCasting(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_chromecastState(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->chromecastState(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_airplayState(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->airplayState(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_chromecastStart(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->chromecastStart(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_chromecastStop(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->chromecastStop(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_chromecastJoin(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->chromecastJoin(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_chromecastLeave(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->chromecastLeave(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_airplayStart(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->airplayStart(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeCastModuleCxxSpecJSI_airplayStop(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeCastModuleCxxSpecJSI *>(&turboModule)->airplayStop(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}

NativeCastModuleCxxSpecJSI::NativeCastModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("THEORCTCastModule", jsInvoker) {
  methodMap_["casting"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_casting};
  methodMap_["chromecastCasting"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_chromecastCasting};
  methodMap_["airplayCasting"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_airplayCasting};
  methodMap_["chromecastState"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_chromecastState};
  methodMap_["airplayState"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_airplayState};
  methodMap_["chromecastStart"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_chromecastStart};
  methodMap_["chromecastStop"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_chromecastStop};
  methodMap_["chromecastJoin"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_chromecastJoin};
  methodMap_["chromecastLeave"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_chromecastLeave};
  methodMap_["airplayStart"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_airplayStart};
  methodMap_["airplayStop"] = MethodMetadata {1, __hostFunction_NativeCastModuleCxxSpecJSI_airplayStop};
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_registerContentProtectionIntegration(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->registerContentProtectionIntegration(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onBuildProcessed(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onBuildProcessed(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onCertificateRequest(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onCertificateRequest(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onCertificateRequestProcessedAsCertificate(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onCertificateRequestProcessedAsCertificate(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onCertificateRequestProcessedAsRequest(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onCertificateRequestProcessedAsRequest(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onCertificateResponseProcessed(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onCertificateResponseProcessed(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onLicenseRequestProcessedAsLicense(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onLicenseRequestProcessedAsLicense(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onLicenseRequestProcessedAsRequest(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onLicenseRequestProcessedAsRequest(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onLicenseResponseProcessed(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onLicenseResponseProcessed(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onExtractFairplayContentIdProcessed(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeContentProtectionModuleCxxSpecJSI *>(&turboModule)->onExtractFairplayContentIdProcessed(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}

NativeContentProtectionModuleCxxSpecJSI::NativeContentProtectionModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("THEORCTContentProtectionModule", jsInvoker) {
  methodMap_["registerContentProtectionIntegration"] = MethodMetadata {2, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_registerContentProtectionIntegration};
  methodMap_["onBuildProcessed"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onBuildProcessed};
  methodMap_["onCertificateRequest"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onCertificateRequest};
  methodMap_["onCertificateRequestProcessedAsCertificate"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onCertificateRequestProcessedAsCertificate};
  methodMap_["onCertificateRequestProcessedAsRequest"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onCertificateRequestProcessedAsRequest};
  methodMap_["onCertificateResponseProcessed"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onCertificateResponseProcessed};
  methodMap_["onLicenseRequestProcessedAsLicense"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onLicenseRequestProcessedAsLicense};
  methodMap_["onLicenseRequestProcessedAsRequest"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onLicenseRequestProcessedAsRequest};
  methodMap_["onLicenseResponseProcessed"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onLicenseResponseProcessed};
  methodMap_["onExtractFairplayContentIdProcessed"] = MethodMetadata {1, __hostFunction_NativeContentProtectionModuleCxxSpecJSI_onExtractFairplayContentIdProcessed};
}
static jsi::Value __hostFunction_NativeEventBroadcastModuleCxxSpecJSI_broadcastEvent(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeEventBroadcastModuleCxxSpecJSI *>(&turboModule)->broadcastEvent(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}

NativeEventBroadcastModuleCxxSpecJSI::NativeEventBroadcastModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("THEORCTEventBroadcastModule", jsInvoker) {
  methodMap_["broadcastEvent"] = MethodMetadata {2, __hostFunction_NativeEventBroadcastModuleCxxSpecJSI_broadcastEvent};
}
static jsi::Value __hostFunction_NativePlaybackSettingsModuleCxxSpecJSI_useFastStartup(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlaybackSettingsModuleCxxSpecJSI *>(&turboModule)->useFastStartup(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asBool()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlaybackSettingsModuleCxxSpecJSI_setLipSyncCorrection(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlaybackSettingsModuleCxxSpecJSI *>(&turboModule)->setLipSyncCorrection(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}

NativePlaybackSettingsModuleCxxSpecJSI::NativePlaybackSettingsModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("THEORCTPlaybackSettingsModule", jsInvoker) {
  methodMap_["useFastStartup"] = MethodMetadata {1, __hostFunction_NativePlaybackSettingsModuleCxxSpecJSI_useFastStartup};
  methodMap_["setLipSyncCorrection"] = MethodMetadata {1, __hostFunction_NativePlaybackSettingsModuleCxxSpecJSI_setLipSyncCorrection};
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_version(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->version(
    rt
  );
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setPreload(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setPreload(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setCurrentTime(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setCurrentTime(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setPipConfig(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setPipConfig(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setBackgroundAudioConfig(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setBackgroundAudioConfig(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setPresentationMode(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setPresentationMode(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setMuted(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setMuted(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asBool()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setPlaybackRate(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setPlaybackRate(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setSelectedAudioTrack(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setSelectedAudioTrack(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 || args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asNumber())
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setSelectedVideoTrack(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setSelectedVideoTrack(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 || args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asNumber())
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setSelectedTextTrack(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setSelectedTextTrack(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 || args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asNumber())
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setSource(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setSource(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setTargetVideoQuality(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setTargetVideoQuality(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asArray(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setVolume(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setVolume(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setAspectRatio(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setAspectRatio(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setRenderingTarget(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setRenderingTarget(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setKeepScreenOn(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setKeepScreenOn(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asBool()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setPaused(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setPaused(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asBool()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setTextTrackStyle(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setTextTrackStyle(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativePlayerModuleCxxSpecJSI_setABRConfig(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativePlayerModuleCxxSpecJSI *>(&turboModule)->setABRConfig(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
  return jsi::Value::undefined();
}

NativePlayerModuleCxxSpecJSI::NativePlayerModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("THEORCTPlayerModule", jsInvoker) {
  methodMap_["version"] = MethodMetadata {0, __hostFunction_NativePlayerModuleCxxSpecJSI_version};
  methodMap_["setPreload"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setPreload};
  methodMap_["setCurrentTime"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setCurrentTime};
  methodMap_["setPipConfig"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setPipConfig};
  methodMap_["setBackgroundAudioConfig"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setBackgroundAudioConfig};
  methodMap_["setPresentationMode"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setPresentationMode};
  methodMap_["setMuted"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setMuted};
  methodMap_["setPlaybackRate"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setPlaybackRate};
  methodMap_["setSelectedAudioTrack"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setSelectedAudioTrack};
  methodMap_["setSelectedVideoTrack"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setSelectedVideoTrack};
  methodMap_["setSelectedTextTrack"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setSelectedTextTrack};
  methodMap_["setSource"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setSource};
  methodMap_["setTargetVideoQuality"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setTargetVideoQuality};
  methodMap_["setVolume"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setVolume};
  methodMap_["setAspectRatio"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setAspectRatio};
  methodMap_["setRenderingTarget"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setRenderingTarget};
  methodMap_["setKeepScreenOn"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setKeepScreenOn};
  methodMap_["setPaused"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setPaused};
  methodMap_["setTextTrackStyle"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setTextTrackStyle};
  methodMap_["setABRConfig"] = MethodMetadata {2, __hostFunction_NativePlayerModuleCxxSpecJSI_setABRConfig};
}


} // namespace facebook::react
